<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilAuth.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilAuth.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA2
        DQAAAk1TRnQBSQFMAgEBBQEAAQkBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wYAAWYBhjsAAaEBpwEA
        AbUBrgGhAmY4AAHtAa4BtQEJAe4BzwEJAbU4AAGuAfABvAPwAQcBhgKhNQACrgPwArwB8AG1AQkBhjUA
        AvIB7gHyAacBAAG1AbwC7gGGNQABrgG8Ae4B8wGGAQABzwK8AYY2AAGhAbUB8AHzAfAB3QHwArwBBwGh
        AYYBoTMAAacB/wH0AvAB8QHuAbwCrgFmAe4BhjQAAacBoQG1AfMBBwHyAbUB8gEHAbwB7gGuAbUBoTQA
        ArUBAAHPAa4BvAHwAe4BCQHwAbUBpzcAAaEB8gHzAfIBoQHPAbwBrgGhOAABtQH0AfIBtQHyAe4BvAGG
        OQAB7gHzAQcB7gGuAYY6AAG1Ac8BpwG8AaepAAGuAe8KAAGZASoBMQGZAf8LAAGZAioBmQH/CwABmQIq
        AZkB9AEAAfMBrgH0Af8B7wgAAfEBtQGuAgAB8QEHBgABUgExAVkCOAExAXQB/wgAAioCWQE4ATEBdAH0
        CAACKgFZAXoB9wKuAbwBrgK1BQACrgH0Aa4BvAG1Aa4B7QEJAa4B8wUAASoBMQZZATEBUQEbBQABWAEq
        BlkBMQEqARsFAAFYASoBWQGgAbwB8AO8AQcB7QQAAQcB8AK1AQkCvAGuAbUBBwG1AfQFAAIxCVkBWAGZ
        AgAB8wHlATEJWQFYAXkCAAHzAeUBMQHlAe0BrgG8AvABvAHwAbUBCQHsAgABvAHwA7wC8AK8AQcBrgYA
        AVIBMQPlAXoGWQFLAgABKgGgATEC5QF6BlkBWAEqAgABKgGgATEBwwHzAfIB8QEHAaABGgK8AQkB6wIA
        Af8BrgHwAbwB8AO8AfABvAOuAfQDAAFYATEG5QF6AlkBWAFLAgABeQGgATEF5QF6A1kBoAEqAgABeQGg
        ATEBoAG1AfMB8gGuAaABGgHwAbwBrgFSAQABrgK1AbwC8AG8AQcCvAHwAbwBBwG1AfcDAAF5ATEDoAbl
        AXoBSwEAAfMBwwGgATEDoAXlAXoBwwEqAQAB8wHDAaABMQGgAcMCvAHzAQkB8gHwArwBHAEAAfAB8gHx
        AbwB8QG1Af8BAAH0BLwBBwHwAwABmQExBqAD5QF6AUsBAAFLAsMBMQWgA+UBmgHDASoBAAFLAsMBMQGg
        AQcB/wHzAQkB8AG8AfAB7AGuAVIBAAEHAvIB8AHyAa4DAAO8Aa4B9AQAAZoBMQHDBqAC5QGaAUsBAAGZ
        AfYBwwExAcMFoALlAsMBKgEAAZkB9gHDATEBwwGgAsMB9AEHAbUB8gH2AcMBKgIAAfMB8gG8AfIBtQGu
        AbwBtQHwArwCrgQAARoBMQPDBqABmgFLAQAB9AEbAZkBMQOaBKABmgLDASoBAAH0ARsBmQExA5oBwwG1
        AsMB7wLDASoCAAG1AvIB8wHyAfAB3QLwA7wBtQQAAXQBMQKaB6ABmgFSBAABUgH2AsMD9gTDASoEAAFS
        AfYCwwP2BMMBKgIAAfAC9AHwAfEC8gHxAbwB8AG1AbwB7QUAAVgBmQGaARoBGwH2Af8C9gLDAVIEAAFY
        AZkBmgEaAcMB9gH/BPYBKgQAAVgBmQGaARoBwwH2Af8E9gEqAgABtQEHAbUBvAHzAfABvALwAa4BAAH/
        DAABGwH/A/YBdAoAARsB/wP2AXQKAAEbAf8D9gF0BQABvAHzAfACtQHwAbUPAANSATEB9gsAATEBKwIq
        AfQLAAExASsCKgH0BQABvAHwAbUBAAH/AbUB80QAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEB
        BgABARYAA/8BAAH5Af8GAAHIAT8GAAHAAT8GAAHAAQ8GAAGAAQ8GAAGCAQ8GAAGCAR8GAAGAAQMGAAGA
        AQMGAAHABwAB8gcAAf4HAAH/BwAB/wGBBgAB/wGDBgAC/wYABv8B/gF/AeAB/wHgAf8B4AGDAfwBZwHg
        AR8B4AEfAeABAwHgAQMB4AEDAeABAwHgAQMBwAEDAeABAAHAAQABwAEAAcABBwHgAQABwAEAAcABAAHA
        AQAB4AEAAcABAAHAAQABgAEAAeABAAGAAQABgAEAAoAB4AEAAYABAAGAAQABgQHBAeABAAGAAQABgAEA
        AcABAQHgAQABgAEAAYABAAHAAQEB4AEAAfABAAHwAQABwAEBAfABAAHwAQAB8AEAAcABCwH/AcAB/wHA
        Af8BwAH4AQ8B/wHgAf8B4AH/AeAB+AGPCP8L
</value>
  </data>
</root>